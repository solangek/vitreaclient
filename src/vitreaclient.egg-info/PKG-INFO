Metadata-Version: 2.4
Name: vitreaclient
Version: 0.1.4
Summary: Python package encapsulating Vitrea box communication protocol.
Author-email: SK <skappdevel@gmail.com>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
        ...
        
Project-URL: Homepage, https://github.com/solangek/vitreaclient
Keywords: home automation,vitrea
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# Vitrea

Python package encapsulating the simple Vitrea box communication protocol.
You need to identify the Vitrea box IP address and port to use this package.
Note that the port is not necessarily the port used by the Vitrea app (hint: try +/- 1).

## Installation

```bash
pip install vitreaclient
```

## Usage

```python
from vitreaclient.client import VitreaClient
from vitreaclient.constants import VitreaResponse, DeviceStatus
import asyncio


async def vitrea_test():
    client = VitreaClient(host='192.168.1.100', port=11502)

    status_events = []
    def on_status(event):
        # convert status char to DeviceStatus
        if event.status:
            status = DeviceStatus(event.status)
        else:
            status = None
        print(f"Event type: {event.type}, Node: {event.node}, Key: {event.key}, Status: {status}, Extra: {event.extra}")

        status_events.append(event)

    client.on(VitreaResponse.STATUS, on_status)

    def on_ok(event):
        print("Event type OK")

    client.on(VitreaResponse.OK, on_ok)

    # Start the read task to listen for incoming messages
    await client.connect()
    await client.start_read_task()

    await client.key_off("018", "2")  # Example command to turn on a key
    await asyncio.sleep(2)
    await client.key_on("018", "2")  # Example command to turn off a key

    # get the status of all nodes
    await client.status_request()

    await asyncio.sleep(10)  # Give time for response
    print(f"Status events received: {len(status_events)}")
    assert len(status_events) > 0, "No status events received"

    client.disconnect()



```

## License
See [LICENSE](LICENSE).

